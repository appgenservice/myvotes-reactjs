{"ast":null,"code":"import _classCallCheck from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ajay/software/react/appgenservice/src/components/Dashboard.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nvar Dashboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.manageCP = function (occupied) {\n      fetch(\"http://localhost:8080/\" + occupied ? \"unplug\" : \"plug\", {\n        method: 'PUT'\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cps = this.props.cps;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: cps && cps.map(function (cp) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cp.occupied ? \"card free\" : \"card occupied\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Charging Point:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: cp.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: [\" \", cp.occupied ? \"Plugged\" : \"Free\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Power Consumed:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: [\" \", cp.occupied ? cp.power : \"-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Plugged Time: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: [\" \", cp.occupied ? moment(cp.connectedTime).format('MM.DD.YYYY hh:mm:ss') : \"-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 25\n              }, _this2), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: function onClick() {\n                  return _this2.manageCP(cp.occupied);\n                },\n                children: cp.occupied ? \"Unplug\" : \"Plug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 25\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 21\n            }, _this2)\n          }, cp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\n;\nexport default Dashboard;","map":{"version":3,"sources":["/home/ajay/software/react/appgenservice/src/components/Dashboard.js"],"names":["React","moment","Dashboard","manageCP","occupied","fetch","method","then","res","console","log","catch","err","error","cps","props","map","cp","id","power","connectedTime","format","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IACMC,S;;;;;;;;;;;;;;;;UACHC,Q,GAAU,UAACC,QAAD,EAAa;AACtBC,MAAAA,KAAK,CAAE,2BAA2BD,QAA3B,GAAsC,QAAtC,GAAiD,MAAnD,EAA4D;AAC9DE,QAAAA,MAAM,EAAE;AADsD,OAA5D,CAAL,CAEGC,IAFH,CAEQ,UAACC,GAAD,EAAS;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAJD,EAIGG,KAJH,CAIS,UAAAC,GAAG,EAAI;AACfH,QAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,OANA;AAOD,K;;;;;;;6BACM;AAAA;;AAAA,UACAE,GADA,GACO,KAAKC,KADZ,CACAD,GADA;AAGL,0BAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAEKA,GAAG,IAAIA,GAAG,CAACE,GAAJ,CAAQ,UAACC,EAAD;AAAA,8BACZ;AAAK,YAAA,SAAS,EAAEA,EAAE,CAACb,QAAH,GAAc,WAAd,GAA0B,eAA1C;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,0BAA6Ba,EAAE,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,gCAA8BD,EAAE,CAACb,QAAH,GAAc,SAAd,GAAwB,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAMI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,gCAA8Ba,EAAE,CAACb,QAAH,GAAca,EAAE,CAACE,KAAjB,GAAyB,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAQI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARJ,eAUI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,gCAA8BF,EAAE,CAACb,QAAH,GAAcH,MAAM,CAACgB,EAAE,CAACG,aAAJ,CAAN,CAAyBC,MAAzB,CAAgC,qBAAhC,CAAd,GAAuE,GAArG;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAWI;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAY,gBAAA,OAAO,EAAE;AAAA,yBAAM,MAAI,CAAClB,QAAL,CAAcc,EAAE,CAACb,QAAjB,CAAN;AAAA,iBAArB;AAAA,0BAAwDa,EAAE,CAACb,QAAH,GAAc,QAAd,GAAyB;AAAjF;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAgEa,EAAE,CAACC,EAAnE;AAAA;AAAA;AAAA;AAAA,oBADY;AAAA,SAAR;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAuBH;;;;EApCuBlB,KAAK,CAACsB,S;;AAsC7B;AAED,eAAepB,SAAf","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nclass Dashboard extends React.Component {\n   manageCP =(occupied)=> {\n    fetch((\"http://localhost:8080/\" + occupied ? \"unplug\" : \"plug\"), {\n       method: 'PUT'\n    }).then((res) => {\n      console.log(res);\n    }).catch(err => {\n     console.error(err)\n   });\n  }\nrender() {\n    let {cps} = this.props;\n\n    return (\n\n        <div className=\"container\">\n\n            {cps && cps.map((cp) => (\n                <div className={cp.occupied ? \"card free\":\"card occupied\"} key={cp.id}>\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">Charging Point:</div>\n                        <div className=\"card-title\">{cp.id}</div>\n                        <div className=\"card-title\">Status:</div>\n                        <div className=\"card-title\"> {cp.occupied ? \"Plugged\":\"Free\"}</div>\n\n                        <div className=\"card-title\">Power Consumed:</div>\n                        <div className=\"card-title\"> {cp.occupied ? cp.power : \"-\"}</div>\n                        <div className=\"card-title\">Plugged Time: </div>\n\n                        <div className=\"card-title\"> {cp.occupied ? moment(cp.connectedTime).format('MM.DD.YYYY hh:mm:ss') : \"-\"}</div>\n                        <a href=\"#\" onClick={() => this.manageCP(cp.occupied)}>{cp.occupied ? \"Unplug\" : \"Plug\"}</a>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\n};\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}