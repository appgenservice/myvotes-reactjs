{"ast":null,"code":"import _classCallCheck from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/ajay/software/react/appgenservice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ajay/software/react/appgenservice/src/components/Dashboard.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nvar Dashboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var cps = this.props.cps;\n\n      handleClick = function handleClick() {\n        console.log('this is:', _this);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: cps && cps.map(function (cp) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cp.occupied ? \"card free\" : \"card occupied\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Charging Point:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: cp.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: [\" \", cp.occupied ? \"Plugged\" : \"Free\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Power Consumed:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: [\" \", cp.occupied ? cp.power : \"-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: \"Plugged Time: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-title\",\n                children: [\" \", cp.occupied ? moment(cp.connectedTime).format('MM.DD.YYYY hh:mm:ss') : \"-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: function onClick() {\n                  return _this.manage(cp.occupied);\n                },\n                children: cp.occupied ? \"Unplug\" : \"Plug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }, _this)\n          }, cp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\n;\nexport default Dashboard;","map":{"version":3,"sources":["/home/ajay/software/react/appgenservice/src/components/Dashboard.js"],"names":["React","moment","Dashboard","cps","props","handleClick","console","log","map","cp","occupied","id","power","connectedTime","format","manage","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IACMC,S;;;;;;;;;;;;;6BACG;AAAA;;AAAA,UACAC,GADA,GACO,KAAKC,KADZ,CACAD,GADA;;AAELE,MAAAA,WAAW,GAAG,uBAAM;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAxB;AACD,OAFC;;AAGA,0BAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAEKJ,GAAG,IAAIA,GAAG,CAACK,GAAJ,CAAQ,UAACC,EAAD;AAAA,8BACZ;AAAK,YAAA,SAAS,EAAEA,EAAE,CAACC,QAAH,GAAc,WAAd,GAA0B,eAA1C;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,0BAA6BD,EAAE,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAGI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,gCAA8BF,EAAE,CAACC,QAAH,GAAc,SAAd,GAAwB,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAMI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,eAOI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,gCAA8BD,EAAE,CAACC,QAAH,GAAcD,EAAE,CAACG,KAAjB,GAAyB,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,eAQI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,eAUI;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,gCAA8BH,EAAE,CAACC,QAAH,GAAcT,MAAM,CAACQ,EAAE,CAACI,aAAJ,CAAN,CAAyBC,MAAzB,CAAgC,qBAAhC,CAAd,GAAuE,GAArG;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,eAWI;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAY,gBAAA,OAAO,EAAE;AAAA,yBAAM,KAAI,CAACC,MAAL,CAAYN,EAAE,CAACC,QAAf,CAAN;AAAA,iBAArB;AAAA,0BAAsDD,EAAE,CAACC,QAAH,GAAc,QAAd,GAAyB;AAA/E;AAAA;AAAA;AAAA;AAAA,uBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAgED,EAAE,CAACE,EAAnE;AAAA;AAAA;AAAA;AAAA,mBADY;AAAA,SAAR;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAuBH;;;;EA7BuBX,KAAK,CAACgB,S;;AA+B7B;AAED,eAAed,SAAf","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nclass Dashboard extends React.Component {\nrender() {\n    let {cps} = this.props;\n    handleClick = () => {\n    console.log('this is:', this);\n  }\n    return (\n\n        <div className=\"container\">\n\n            {cps && cps.map((cp) => (\n                <div className={cp.occupied ? \"card free\":\"card occupied\"} key={cp.id}>\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">Charging Point:</div>\n                        <div className=\"card-title\">{cp.id}</div>\n                        <div className=\"card-title\">Status:</div>\n                        <div className=\"card-title\"> {cp.occupied ? \"Plugged\":\"Free\"}</div>\n\n                        <div className=\"card-title\">Power Consumed:</div>\n                        <div className=\"card-title\"> {cp.occupied ? cp.power : \"-\"}</div>\n                        <div className=\"card-title\">Plugged Time: </div>\n\n                        <div className=\"card-title\"> {cp.occupied ? moment(cp.connectedTime).format('MM.DD.YYYY hh:mm:ss') : \"-\"}</div>\n                        <a href=\"#\" onClick={() => this.manage(cp.occupied)}>{cp.occupied ? \"Unplug\" : \"Plug\"}</a>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\n};\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}